#!/usr/bin/env ruby

preprocess do
  # ignore unpublished items
  @items.delete_if { |item| item[:published] == false }
end

compile '/static/**/*' do
  # don’t filter or layout
end

compile '/notes/*' do
  filter :fenced_code_block
  filter :erb
  filter :kramdown
  filter :colorize_syntax, :default_colorizer => :pygmentize  # syntax highlighting
  layout '/default.*'
  # FIXME do it unless debug
  # filter :html_compressor, :type => item[:extension]
end

compile '/htaccess.*' do
  filter :erb
end

compile '/{rss,sitemap}.*' do
  filter :erb
  # filter :html_compressor, :type => item[:extension]
end

compile '**/*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    filter :kramdown
    item_layout = item[:layout] || 'default'
    layout "/#{item_layout}.*" unless item_layout == 'none'
  end
end

route '/notes/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier.without_ext).captures

  "/#{y}/#{m}/#{d}/#{slug}/index.html"
end

route '/static/**/*' do
  item.identifier.to_s[7..-1]
end

route '/htaccess.*' do
  '/.htaccess'
end

route '/{rss,sitemap}.*' do
  item.identifier.to_s
end

route '/error/*' do
  item.identifier.without_ext.to_s[6..-1] + '.html'
end

route '**/*' do
  if item.binary?
    item.identifier.to_s
  else
    item.identifier.without_ext + '.html'
  end
end

layout '**/*', :erb
